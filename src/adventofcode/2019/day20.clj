(ns adventofcode.2019.day20
  (:require
   [clojure.string :as str]
   [adventofcode.utils :as u]
   [clojure.math.combinatorics :as combo])
  (:import [clojure.lang PersistentQueue]))

(def input "                                       D             Y       C       W     K   D                                             \n                                       Y             K       J       S     K   F                                             \n  #####################################.#############.#######.#######.#####.###.###########################################  \n  #...#...#.....#.#.........................#.#.......#.....#...#.......#...#...........#...#.#.#.....#...#.......#.#.....#  \n  ###.###.#.#####.###.#######.#########.#.#.#.#.###.###.###.#.###.#######.#######.#########.#.#.#.#######.###.#####.###.#.#  \n  #.....#.......#.#.#.#.....#.#.#.......#.#...#...#.#.....#.....#.....#.........#.#.#.............#...#.#.#...#.#.#.#...#.#  \n  #####.#.#.###.#.#.#####.#.###.#.#####.###.#.###.#.#.###.#######.###.###.#.#.###.#.#.#####.###.###.#.#.#.#.###.#.#.###.###  \n  #.#.....#...#...........#.......#.#.#.#.#.#...#.#.#.#...#.....#.#.#.#...#.#.#.#.........#.#.#.#...#.#.#.#.......#.#.....#  \n  #.###.#######.#.#.#.###.#.###.#.#.#.###.###.###.#####.###.#.#####.#.#.#######.###.###.###.#.###.#####.#.#######.#.###.###  \n  #.#.#...#.....#.#.#...#.#.#...#.#.#.#.#...#.#...#...#.#...#.#...#.#.#.#.#.#.....#...#.#.....#.......#.....#.....#.#.....#  \n  #.#.#.###.#######.#.#####.#.#####.#.#.#.###.#.###.###.#.###.###.#.#.#.#.#.###.#.#.#.#####.###.#.#.###.#.#######.#.###.#.#  \n  #...#...#.#.......#...#...#.#.#.....#...#...#...#.#.....#.....#.....#.....#.#.#...#.#...#...#.#.#...#.#.....#.#.#.....#.#  \n  #.#####.#####.###.###.###.#.#.#####.#.#####.#.###.#######.###.#.###.###.#.#.#.###.###.#######.#########.#####.#.#.#######  \n  #.....#.....#.#.#.#...#...#.#...............#.....#...#.....#.#.#...#.#.#.#.....#.#.#.....#.....#.#...#.#.#.......#.#.#.#  \n  #.###.#########.###.#######.#.#.#######.#.#.#.#.#.###.###.#.###.###.#.#.#####.#####.#.#######.###.#.###.#.#####.#.#.#.#.#  \n  #.#.#.#.......#.#.#...#.....#.#.#.......#.#.#.#.#.#.....#.#.#...#.#.#...#.#...#.#.#...#.#.#.....#...#.....#...#.#.......#  \n  #.#.#########.#.#.#########.###.###########.#.#####.#######.#.###.###.###.###.#.#.#.###.#.#.#####.#####.#####.#.#######.#  \n  #.#.......#.#...#.....#.#.#.#.#.#.#.#.#.....#.........#.....#.#...#.......#.#.......................#.....#.#.........#.#  \n  #.#.#######.###.#.###.#.#.###.###.#.#.#####.#.#.#.#.#####.#.#.#.###.###.#.#.###.###.#####.#.#####.#####.###.###.#.#######  \n  #.#...#.......#.#.#.#.#.#.#...#...#.#.....#.#.#.#.#...#.#.#.#...#...#...#...#.#...#.....#.#.....#.#.............#.....#.#  \n  #.###.###.#.#.#.#.#.###.#.#.#.###.#.#####.#.###.#.#.###.###.###.#####.#.#.###.#.###.###.#############.#######.#########.#  \n  #.#...#...#.#...#...#.....#.#.#.#...#.#.....#...#.#...#.#.#.#.#.....#.#.#.#.#...#.....#.......#.#.#.#.#...#.#.#.#.#...#.#  \n  #.###.#######.###.#.###.#.###.#.###.#.#.###.#.#########.#.#.#.#####.#.#####.#####.#.###.###.###.#.#.#####.#.#.#.#.#.###.#  \n  #.......#...#...#.#.#.#.#.#.............#.#.#.....#.....#...#.....#.#.#.......#...#.#.#.#.#.#.#.........#.#.....#...#.#.#  \n  #.#######.###.###.###.###.###########.###.#.#.#.#######.#.###.#.###.#.#####.#.#.#.#.#.###.###.###.#.#####.#.###.#.###.#.#  \n  #.#.#.....#...#...#.....#...#.#...#.......#.#.#...#.#...#...#.#.....#.#.#...#.#.#.#.#.#.#.....#...#.#.....#.#.#.#.#.#.#.#  \n  #.#.###.###.###.#######.#.#.#.#.###.#####.#####.###.#.#.#.###.#.#.###.#.#.###.#####.#.#.#.#########.#####.#.#.###.#.#.#.#  \n  #.#...#.....#.....#.....#.#.........#.......#...#...#.#...#.#.#.#.#...#...#.#.#.#.........#...#.#...#.........#...#.....#  \n  #.#.#######.#.#.#.#####.###.#.#########.#######.#.#.#.#####.#.#####.#.#.#.#.###.###.#.#####.###.###.#.#.#.#.#.#.###.#####  \n  #...#.#...#.#.#.#.#.#.....#.#...#.#.#.#.#.#.#.....#.#...#.....#.#...#...#...#...#.#.#.........#...#.#.#.#.#.#...#...#.#.#  \n  #.###.###.#.###.###.#.###########.#.#.#.#.#.#.#.###.###.###.#.#.#########.###.###.#.###.###.###.###.#####.###.###.###.#.#  \n  #.......#...#...#.#.......#.#.#.....#...#.#...#.#...#.....#.#.....#.....#.......#.#...#.#.....#.......#.#...#.........#.#  \n  ###.#######.#.###.#####.###.#.#.###.###.#.###.###.###.#########.#####.#.###.#####.#.#.#.###.#######.###.#####.###.#####.#  \n  #.........#...#.#.....#.#...#.#.#...........#.#.....#.......#.......#.#.......#.....#.#.#.#...#.#.#.....#.#.#.#.#.#.#...#  \n  #.#.###.#.#.###.#####.#.###.#.#.#########.#######.#######.###.#######.###########.#######.#####.#.#.#####.#.###.#.#.###.#  \n  #.#...#.#...#.#.#.......#.....#.#        W       T       D   B       X           R      #...#...#.......#.#.#.#.....#...#  \n  ###########.#.#.#.#####.###.#####        E       V       Y   Y       D           R      ###.###.#####.###.#.#.###.#####.#  \n  #.#.#...#.#.....#...#.#.#.#.....#                                                       #.......#.................#...#..LX\n  #.#.#.###.#.###.#.###.#.#.#.###.#                                                       #.#####.#.###.###.#.#####.#.#.#.#  \n  #...#.#.#.....#.#.#.........#.#.#                                                     DB....#.......#.#...#.#.#.....#.#.#  \n  ###.#.#.###.#######.#####.###.###                                                       #.#######.###.#####.#.#####.#.#.#  \n  #.#.....#...#...#.#.#.#.........#                                                       #.#.#...#...#.#.#.#.....#...#.#.#  \n  #.###.###.###.###.###.###.#######                                                       #.#.#.#########.#.#.#.#####.#.#.#  \n  #.#.....#.#.#.#.#.#...........#.#                                                       #.#.#...#.#...#.#...#...#...#...#  \n  #.###.###.#.#.#.#.#####.#.#####.#                                                       ###.#.###.#.###.###.#.#####.#.###  \n  #...#...#.......#.......#.#.#.#.#                                                     ZS....#...#.......#.#.#...#.#.#...#  \n  #.###.###.#########.###.#.#.#.#.#                                                       #.#.#.#.###.#####.#######.#######  \nZM....#...#...#.....#...#.#...#....HJ                                                     #.#...#.......#.#.........#.....#  \n  #.###.###.#.#.#.#######.###.#.#.#                                                       #.#####.###.###.#####.#########.#  \n  #.........#...#...........#...#.#                                                       #.#.#.#...#.......#...#.#...#....TV\n  ###.#.#.#########################                                                       ###.#.#######.#####.###.#.#####.#  \n  #.#.#.#.#.....#.................#                                                       #...#.#.#.#.#...................#  \n  #.#######.#.###.#####.#.#######.#                                                       ###.#.#.#.#.###########.#########  \n  #...#...#.#.#.....#.#.#.#.#.#...#                                                       #.....#...#.....#.....#.#.....#..LN\n  ###.###.#.#.#.###.#.#####.#.#.###                                                       #.#.#.#.#.#.#.###.###.###.###.#.#  \nKI..#.#.....#.#...#.#...........#.#                                                     GF..#.#...#.#.#.......#.....#.#.#.#  \n  #.#.###.###.#.#####.#.#.#.###.#.#                                                       #####.#.###.#######.###.###.#.#.#  \n  #.........#.......#.#.#.#.#.#....RJ                                                     #.#...#.#.....#.#...#.#.#.....#..ZZ\n  #####.#.#####.#.#####.#####.#####                                                       #.#####.#.###.#.#####.#####.###.#  \n  #.#.#.#...#...#.....#...#.......#                                                       #.....#...#.....#.#...#...#.....#  \n  #.#.#####.#######.#.#######.#.###                                                       #.#######.###.###.###.#.#####.###  \n  #.....#.#.#...#...#.#.#...#.#...#                                                     IT......#.#...#.#.#.......#...#.#..RJ\n  #.###.#.###.#####.###.###.#.###.#                                                       #.#.#.#.#######.#.#####.#.#.###.#  \n  #...#.......#.#...#.......#...#.#                                                       #.#.#.#.#...#.....#...#...#.#...#  \n  ###.#######.#.#######.#.#.#.###.#                                                       #.#####.#.#.#####.###.#####.###.#  \nGF....#.#...#...........#.#.....#..KK                                                     #.#.#...#.#...#.....#.#.#...#...#  \n  #####.###.###########.#########.#                                                       #.#.###.#####.#####.###.###.#.###  \n  #.#.............#.#.....#.#.#.#.#                                                       #.....................#.........#  \n  #.#.#######.#.###.#####.#.#.#.###                                                       #.###########.#.#.#.#############  \n  #.........#.#.........#.#.#......FI                                                     #...#.......#.#.#.#.#.#...#.#...#  \n  #.#######.#.#.#.#.#####.#.#.###.#                                                       #####.#####.#########.#.###.#.###  \n  #.#.....#.#.#.#.#.#...#.#.#.#...#                                                     PC..#.#.#.....#.#.#.#...#...#.....#  \n  #########.#####.###.#####.#####.#                                                       #.#.#.#.###.#.#.#.###.#.#######.#  \nBE..............#.................#                                                       #.#...#...#...#.#.#.........#....XD\n  #.#.#.#.#.#####.#.#.#.#########.#                                                       #.###.###.#####.#.###.#####.#.###  \n  #.#.#.#.#.....#.#.#.#.#.......#.#                                                       #.......#...............#.....#.#  \n  #.#.###.#.#.#.###.#####.###.#####                                                       #######.#.###.#.###.#########.#.#  \n  #.#.#...#.#.#.#.#.#.....#.......#                                                       #...#.#.#.#...#...#.#.......#.#..DB\n  #.#####.#######.###.#####.#.#.###                                                       #.#.#.#####.#.#.#####.###.#####.#  \n  #.#...#...#.#.#...#.....#.#.#.#.#                                                     WS..#.....#.#.#.#...#.#.#.......#.#  \n  ###.#.#####.#.#.#####.#.#####.#.#                                                       #.#.#####.#######.#.#.###.#.###.#  \nRR....#.................#.#...#....LN                                                   SE..#...#...#.#...#.#.....#.#.#....WE\n  #################.#########.#####                                                       #####.#.###.###.#######.#.#####.#  \n  #...#.#.........#.#.........#...#                                                       #.......................#.......#  \n  ###.#.#.#######.#.#.#.#.###.#.#.#                                                       ###############.#############.###  \n  #...#...#.#.....#.#.#.#.#.....#..YK                                                     #.#.#...#.....#.#.....#.....#.#.#  \n  #.###.###.#.###########.###.###.#                                                       #.#.#.#.#.#.#.###.###.#.###.#.#.#  \n  #...#...#.......#.#.#...#...#.#.#                                                       #.#.#.#...#.#.....#...#...#.#.#..SE\n  #.#.#.###.#.###.#.#.###.#.###.#.#                                                       #.#.#.#####.#.#####.###.#.#.###.#  \nFI..#.....#.#...#.........#.#.#...#                                                       #.......#...#.....#...#.#.#...#.#  \n  ###.#.#############.###.###.###.#                                                       #.#.#.#######.#.#####.###.#.###.#  \n  #...#.#...............#.......#.#                                                     UW..#.#.#.......#.#.........#.....#  \n  ###.#.#######.###.#####.#.#.#####                                                       #.#####.#.###.#####.#.###.#.###.#  \n  #...#...#.....#.....#...#.#.#.#.#                                                       #.....#.#...#.#.....#.#...#...#.#  \n  #.###.###.#.#####.#####.#####.#.#        B     C       D     L         K     Z   I      #.###.###.#####.###.#.#.###.#####  \n  #...#.#...#...#.....#.........#.#        E     J       F     X         I     M   N      #...#...#...#...#...#.#.#.....#.#  \n  ###.#.#########.#.###.###.#####.#########.#####.#######.#####.#########.#####.###.#######.#####.#####.#.#.###.#####.###.#  \n  #...#.#.........#.#...#.......#...........#.....#.........#.#.....#.#.#.#.#.#...#.#.....#.....#.#.....#.#.#.......#.#.#.#  \n  #.#.#.#.#.#.###.###.#####.#.#.#.#########.#.#.#####.#######.###.###.#.#.#.#.#.###.#.#####.###########.#####.#.###.#.#.#.#  \n  #.#.#.#.#.#.#...#...#.....#.#.#.#.#.......#.#.#...#.....#.#.....#.......#.....#.......#.#.#.#.#.....#.#.#...#.#...#.....#  \n  #####.###.#.#.#.###.#.###.#####.#.###.#.#.#.#.###.#.#####.#.#######.#.###.#######.###.#.###.#.#.###.###.#.###.#######.#.#  \n  #.#...#...#.#.#...#.#.#.....#...#.....#.#.#.#.#.....#.#...#.#.....#.#...#.....#.#.#.#.#.......#...#.#.....#.#...#.....#.#  \n  #.#####.#######.#.#.###.###.#.#######.###.#.#######.#.#.###.#.###.#.###.#.#.###.#.#.#######.###.###.#####.#.###.#######.#  \n  #...........#...#.#.#...#...#.#.#.....#.#.#...#.#.........#...#...#...#.#.#...#.......#.#.#.#...#.#.#.#.......#...#.....#  \n  #.#.#.#########.#########.#.#.#.#######.#.#.###.###.#####.###.#.#######.###.###.#.#####.#.#.#.###.###.###.#.###.#.###.#.#  \n  #.#.#.#...#.......#.......#.#.#.#...#.....#.....#.....#...#.#.#.....#...#...#...#.......#.....#.......#.#.#.#.#.#...#.#.#  \n  #########.#######.#####.#######.#.#.###.#.#.#.###.#.###.#.#.#####.###.#.#.#########.#####.#.#.#.#.#.###.#.#.#.###.#####.#  \n  #.#.#...#.........#.#.#.....#.#.#.#...#.#.#.#...#.#.#...#...#.....#...#.#.#.......#.......#.#...#.#...#.#.#.#.........#.#  \n  #.#.###.###.#.###.#.#.#.#.###.#.###.#####.#.###.#########.#.###.#.#####.#.#.###.###.###.#.#####.#######.#######.###.###.#  \n  #.#...#.#.#.#.#.#.....#.#.#.#.......#.#...#.#.#.#...#.....#.#.#.#.#...#.#...#...#.....#.#.....#...#.......#.......#...#.#  \n  #.#.###.#.#####.#.#####.#.#.###.###.#.###.#.#.#####.###.#.###.###.#.#.#.#######.#.#.#.###.###.#######.###.###.###.###.#.#  \n  #.#...#.....#...#...#.#.#...#...#.........#.#.#.......#.#.#...#.#...#.#...#...#.#.#.#.#.#.#.............#.#.#.#...#...#.#  \n  #.#.###.#######.#####.#########.#.###.#.###.###.#.#######.###.#.#.#####.#####.#.#.#####.#####.#.#####.#.###.###.#.###.#.#  \n  #...#.....#.....#.........#...#.#.#...#...#.#...#...#.....#.....#...#.....#.#...#.....#...#...#.#...#.#.......#.#.#.#.#.#  \n  ###.###.#######.#####.#####.#############.#.###.#.#######.#.###.#.#####.#.#.#.#.#.#######.#####.###.#.#######.###.#.#####  \n  #.#...#...#.....#.#...#.....#...#...#...#.#.#...#...#...#.#...#...#.....#.#...#.#.....#.....#.#.#...#.....#...#.........#  \n  #.###.#.#######.#.###.#####.###.###.###.#.#.#.###.#####.#.###.###.#####.#######.###.###.###.#.###.###.#.#.###.###.###.#.#  \n  #.#.....#...#...#...#...#.....#.#.........#...#.......#...#...#...#.........#.#.#.........#.#...#...#.#.#...#.#...#...#.#  \n  #.#####.###.###.#.#####.###.###.#.#####.#######.#########.#.#######.#########.#.###.###.#####.###.###########.#######.###  \n  #...........#.#...#.....#...#...#.#...#...#...#...#.......#.....#.....#...#.#...#.#.#...#...#.#...#...#...#.#.....#.....#  \n  #########.#.#.###.#####.###.###.#####.###.#.#.###.#######.#.#########.#.#.#.###.#.#.#####.###.###.#.#####.#.#.#######.###  \n  #.#.....#.#...#...#.#...................#.#.#...#.#.#.....#.....#.#...#.#.....#.#.......................#.#...#.........#  \n  #.#####.#.#######.#.#.#####.#.#####.###.#.#.###.#.#.###.#####.#.#.###.###.###.#.#.#####.#.#.###.#.#.#####.#########.#####  \n  #.....................#.....#.#.......#...#...#.#...#.....#...#.#.#.....#.#.#...#.....#.#.#.#.#.#.#...#...#.#...#.#.#...#  \n  #####.###.#######.###.#####.#.#.#.###.#######.#.#.#.###.#.#.#####.#####.#.#.#######.#####.###.#####.#.#.###.###.#.#.#.###  \n  #.....#.#...#.......#.#.....#.#.#.#.....#.....#...#.#.#.#.#.......#...#.#.#...#.....#...#.....#...#.#.........#.........#  \n  ###.#.#.###.#.###.###.###.#####.###.#######.#########.###.#####.#####.#.#.#.#.###.###.###.#.#.#.#.###.###.###.#####.#.#.#  \n  #...#.#.....#...#.#...#.....#...#.........#.........#.......#.......#...#...#...#.......#.#.#...#...#...#...#.#.....#.#.#  \n  #######################################.###.#####.#####.#######.#######.#######.#####.###################################  \n                                         I   A     I     H       Z       U       B     P                                     \n                                         N   A     T     J       S       W       Y     C                                     ")
(def sample1 "         A           \n         A           \n  #######.#########  \n  #######.........#  \n  #######.#######.#  \n  #######.#######.#  \n  #######.#######.#  \n  #####  B    ###.#  \nBC...##  C    ###.#  \n  ##.##       ###.#  \n  ##...DE  F  ###.#  \n  #####    G  ###.#  \n  #########.#####.#  \nDE..#######...###.#  \n  #.#########.###.#  \nFG..#########.....#  \n  ###########.#####  \n             Z       \n             Z       ")
(def sample2 "                   A               \n                   A               \n  #################.#############  \n  #.#...#...................#.#.#  \n  #.#.#.###.###.###.#########.#.#  \n  #.#.#.......#...#.....#.#.#...#  \n  #.#########.###.#####.#.#.###.#  \n  #.............#.#.....#.......#  \n  ###.###########.###.#####.#.#.#  \n  #.....#        A   C    #.#.#.#  \n  #######        S   P    #####.#  \n  #.#...#                 #......VT\n  #.#.#.#                 #.#####  \n  #...#.#               YN....#.#  \n  #.###.#                 #####.#  \nDI....#.#                 #.....#  \n  #####.#                 #.###.#  \nZZ......#               QG....#..AS\n  ###.###                 #######  \nJO..#.#.#                 #.....#  \n  #.#.#.#                 ###.#.#  \n  #...#..DI             BU....#..LF\n  #####.#                 #.#####  \nYN......#               VT..#....QG\n  #.###.#                 #.###.#  \n  #.#...#                 #.....#  \n  ###.###    J L     J    #.#.###  \n  #.....#    O F     P    #.#...#  \n  #.###.#####.#.#####.#####.###.#  \n  #...#.#.#...#.....#.....#.#...#  \n  #.#####.###.###.#.#.#########.#  \n  #...#.#.....#...#.#.#.#.....#.#  \n  #.###.#####.###.###.#.#.#######  \n  #.#.........#...#.............#  \n  #########.###.###.#############  \n           B   J   C               \n           U   P   P               ")

(defn make-db [s]
  (letfn [(parse-line
            [y line]
            (map vector (range) (repeat y) line))

          (put-char
            [m [x y c]]
            (case c
              \# m
              \space m
              \. (update m :floor conj [x y])
              (update m :letters assoc [x y] c)))

          (put-labels
            [{:as m :keys [floor letters]} xy c1]
            ;;parse if first letter(A): `BA.` (has 1 neighbor- letter and 1 - dot.)
            ;;ignore if second (B): ` BA`
            (let [xys  (u/neighbours xy)
                  txy  (some floor xys)
                  c2   (some letters xys)
                  ;; review:
                  ;;  there is a chance of 2 diff teles
                  ;;  with reverse labels, like AB BA
                  tele (set [c1 c2])]
              (cond-> m
                txy (update :labels assoc txy tele))))

          (map-teles
            [m label kvs]
            (let [xy (ffirst kvs)]
              (case label
                #{\A} (assoc m :start? #{xy})
                #{\Z} (assoc m :finish? #{xy})
                ;;else
                (let [[_ [xy2]] kvs]
                  (update m :teles assoc xy xy2 xy2 xy)))))]

    (as-> s x
      (str/split-lines x)
      (mapcat parse-line (range) x)
      (reduce put-char {:floor #{} :letters {}} x)
      (reduce-kv put-labels x (x :letters))
      (reduce-kv map-teles x (->> x :labels (group-by val))))))

(make-db sample1)
(make-db sample2)
(make-db input)

(defn next-steps [xy floor tele-exit visited]
  (->> xy
    (u/neighbours)
    (filter floor)
    (cons (tele-exit xy))
    (remove nil?)
    (remove visited)))


(defn f1 [input]
  (let [{:as db :keys [start? finish? floor teles]} (make-db input)]
    (loop [shortest Integer/MAX_VALUE
           queue    [{:visited start? :xy (first start?) :len 0}]]
      ;(clojure.pprint/pprint queue)
      (if (empty? queue)
        shortest
        (let [{:as m :keys [visited xy len]} (peek queue)
              queue (pop queue)]
          (cond
            (<= shortest len)
            (recur shortest queue)

            (finish? xy)
            (recur (min shortest len) queue)

            :else
            (let [xys   (next-steps xy floor teles visited)
                  clone (fn [xy] {:xy xy :visited (conj visited xy) :len (inc len)})]
              (recur shortest (->> xys (map clone) (into queue))))))))))

(assert (= 23 (f1 sample1)))
(assert (= 58 (f1 sample2)))
(assert (= 620 (f1 input)))


(def sample3 "             Z L X W       C                 \n             Z P Q B       K                 \n  ###########.#.#.#.#######.###############  \n  #...#.......#.#.......#.#.......#.#.#...#  \n  ###.#.#.#.#.#.#.#.###.#.#.#######.#.#.###  \n  #.#...#.#.#...#.#.#...#...#...#.#.......#  \n  #.###.#######.###.###.#.###.###.#.#######  \n  #...#.......#.#...#...#.............#...#  \n  #.#########.#######.#.#######.#######.###  \n  #...#.#    F       R I       Z    #.#.#.#  \n  #.###.#    D       E C       H    #.#.#.#  \n  #.#...#                           #...#.#  \n  #.###.#                           #.###.#  \n  #.#....OA                       WB..#.#..ZH\n  #.###.#                           #.#.#.#  \nCJ......#                           #.....#  \n  #######                           #######  \n  #.#....CK                         #......IC\n  #.###.#                           #.###.#  \n  #.....#                           #...#.#  \n  ###.###                           #.#.#.#  \nXF....#.#                         RF..#.#.#  \n  #####.#                           #######  \n  #......CJ                       NM..#...#  \n  ###.#.#                           #.###.#  \nRE....#.#                           #......RF\n  ###.###        X   X       L      #.#.#.#  \n  #.....#        F   Q       P      #.#.#.#  \n  ###.###########.###.#######.#########.###  \n  #.....#...#.....#.......#...#.....#.#...#  \n  #####.#.###.#######.#######.###.###.#.#.#  \n  #.......#.......#.#.#.#.#...#...#...#.#.#  \n  #####.###.#####.#.#.#.#.###.###.#.###.###  \n  #.......#.....#.#...#...............#...#  \n  #############.#.#.###.###################  \n               A O F   N                     \n               A A D   M                     ")


(defn outer-tele? [maxx maxy [x y]]
  (or
    (#{2 maxx} x)
    (#{2 maxy} y)))

(defn f2 [input]
  (let [{:as db :keys [start? finish? floor teles labels]} (make-db input)
        maxx               (->> floor (map first) (reduce max))
        maxy               (->> floor (map second) (reduce max))
        outer?             (memoize (partial outer-tele? maxx maxy))
        shortest           (memoize (partial u/shortest-distance floor u/neighbours))
        set-dist           (fn sd [m [from to]]
                             (let [len (shortest from to)]  ;;review dec
                               (cond-> m
                                 len (assoc-in [from to] len)
                                 len (assoc-in [to from] len))))
        zero-lvl-landmarks (->> teles keys (remove outer?) (concat start? finish?))
        rest-lvl-landmarks (->> teles keys)
        zero-floor-dists   (reduce set-dist {} (combo/combinations zero-lvl-landmarks 2))
        rest-floor-dists   (reduce set-dist {} (combo/combinations rest-lvl-landmarks 2))
        start-xy           (first start?)
        start-level        0
        seed               {:xy start-xy :len 0 :level start-level :path [start-xy]}
        clones             (fn cl [{:as bot :keys [level xy len path]}]
                             (let [dists (if (zero? level) zero-floor-dists rest-floor-dists)]
                               (->> xy
                                 dists
                                 (map (fn c [[xy d]]
                                        (cond
                                          (start? xy)  {:xy xy :len (+ len d) :level level}
                                          (finish? xy) {:xy xy :len (+ len d) :level level}
                                          :else        {:xy    (teles xy)
                                                        :len   (+ len d 1)
                                                        :level (if (outer? xy)
                                                                 (dec level)
                                                                 (inc level))}))))))]
    [zero-floor-dists
     rest-floor-dists
     (clones seed)
     labels
     (group-by outer? zero-lvl-landmarks)
     (group-by outer? rest-lvl-landmarks)
     start? finish? maxx maxy]

    ;#_
    (time
      (loop [shortest Integer/MAX_VALUE
             queue    [seed]]
        (if (empty? queue)
          shortest
          (let [{:as bot :keys [len xy]} (peek queue)
                queue (pop queue)]
            (cond
              (<= shortest len) (recur shortest queue)
              (finish? xy)      (recur (min shortest len) queue)
              :else             (recur shortest (->> bot
                                                  clones
                                                  (into queue)
                                                  (sort-by :len >)
                                                  (vec))))))))))

(assert (= 26 (f2 sample1)))
(assert (= 396 (f2 sample3)))  ;;;AFXCKHZBWCIFRMNLPDFQXBWHZCKFXAOCJERCIFRMNLPDFQXBWHZCKFXAOCJERQXDF
"Elapsed time: 0.786874 msecs"
"Elapsed time: 25.106933 msecs"

#_ (assert (= 7366 (f2 input)))
"Elapsed time: 46943.506904 msecs"
